// This file is auto-generated by @hey-api/openapi-ts

export const $ChipPlay = {
    properties: {
        chip_name: {
            type: 'string',
            title: 'Chip Name'
        },
        num_played: {
            type: 'integer',
            title: 'Num Played'
        }
    },
    type: 'object',
    required: ['chip_name', 'num_played'],
    title: 'ChipPlay'
} as const;

export const $EntryHistory = {
    properties: {
        event: {
            type: 'integer',
            title: 'Event'
        },
        points: {
            type: 'integer',
            title: 'Points'
        },
        total_points: {
            type: 'integer',
            title: 'Total Points'
        },
        rank: {
            type: 'integer',
            title: 'Rank'
        },
        rank_sort: {
            type: 'integer',
            title: 'Rank Sort'
        },
        overall_rank: {
            type: 'integer',
            title: 'Overall Rank'
        },
        percentile_rank: {
            type: 'integer',
            title: 'Percentile Rank'
        },
        bank: {
            type: 'integer',
            title: 'Bank'
        },
        value: {
            type: 'integer',
            title: 'Value'
        },
        event_transfers: {
            type: 'integer',
            title: 'Event Transfers'
        },
        event_transfers_cost: {
            type: 'integer',
            title: 'Event Transfers Cost'
        },
        points_on_bench: {
            type: 'integer',
            title: 'Points On Bench'
        }
    },
    type: 'object',
    required: ['event', 'points', 'total_points', 'rank', 'rank_sort', 'overall_rank', 'percentile_rank', 'bank', 'value', 'event_transfers', 'event_transfers_cost', 'points_on_bench'],
    title: 'EntryHistory'
} as const;

export const $Event = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        deadline_time: {
            type: 'string',
            format: 'date-time',
            title: 'Deadline Time'
        },
        release_time: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Release Time'
        },
        average_entry_score: {
            type: 'integer',
            title: 'Average Entry Score'
        },
        finished: {
            type: 'boolean',
            title: 'Finished'
        },
        data_checked: {
            type: 'boolean',
            title: 'Data Checked'
        },
        highest_scoring_entry: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Highest Scoring Entry'
        },
        deadline_time_epoch: {
            type: 'integer',
            title: 'Deadline Time Epoch'
        },
        deadline_time_game_offset: {
            type: 'integer',
            title: 'Deadline Time Game Offset'
        },
        highest_score: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Highest Score'
        },
        is_previous: {
            type: 'boolean',
            title: 'Is Previous'
        },
        is_current: {
            type: 'boolean',
            title: 'Is Current'
        },
        is_next: {
            type: 'boolean',
            title: 'Is Next'
        },
        cup_leagues_created: {
            type: 'boolean',
            title: 'Cup Leagues Created'
        },
        h2h_ko_matches_created: {
            type: 'boolean',
            title: 'H2H Ko Matches Created'
        },
        ranked_count: {
            type: 'integer',
            title: 'Ranked Count'
        },
        chip_plays: {
            items: {
                '$ref': '#/components/schemas/ChipPlay'
            },
            type: 'array',
            title: 'Chip Plays'
        },
        most_selected: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Most Selected'
        },
        most_transferred_in: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Most Transferred In'
        },
        top_element: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Top Element'
        },
        top_element_info: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/TopElementInfo'
                },
                {
                    type: 'null'
                }
            ]
        },
        transfers_made: {
            type: 'integer',
            title: 'Transfers Made'
        },
        most_captained: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Most Captained'
        },
        most_vice_captained: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Most Vice Captained'
        }
    },
    type: 'object',
    required: ['id', 'name', 'deadline_time', 'average_entry_score', 'finished', 'data_checked', 'deadline_time_epoch', 'deadline_time_game_offset', 'is_previous', 'is_current', 'is_next', 'cup_leagues_created', 'h2h_ko_matches_created', 'ranked_count', 'chip_plays', 'transfers_made'],
    title: 'Event'
} as const;

export const $GoalType = {
    type: 'string',
    enum: ['points', 'rank', 'money'],
    title: 'GoalType'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $League = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        created: {
            type: 'string',
            format: 'date-time',
            title: 'Created'
        },
        closed: {
            type: 'boolean',
            title: 'Closed'
        },
        max_entries: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Max Entries'
        },
        league_type: {
            type: 'string',
            title: 'League Type'
        },
        scoring: {
            type: 'string',
            title: 'Scoring'
        },
        admin_entry: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Admin Entry'
        },
        start_event: {
            type: 'integer',
            title: 'Start Event'
        },
        code_privacy: {
            type: 'string',
            title: 'Code Privacy'
        },
        has_cup: {
            type: 'boolean',
            title: 'Has Cup'
        },
        cup_league: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Cup League'
        },
        rank: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Rank'
        }
    },
    type: 'object',
    required: ['id', 'name', 'created', 'closed', 'league_type', 'scoring', 'admin_entry', 'start_event', 'code_privacy', 'has_cup'],
    title: 'League'
} as const;

export const $LeagueCreate = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        external_id_fpl: {
            type: 'integer',
            title: 'External Id Fpl'
        }
    },
    type: 'object',
    required: ['name', 'external_id_fpl'],
    title: 'LeagueCreate'
} as const;

export const $LeagueData = {
    properties: {
        new_entries: {
            '$ref': '#/components/schemas/NewEntries'
        },
        last_updated_data: {
            type: 'string',
            format: 'date-time',
            title: 'Last Updated Data'
        },
        league: {
            '$ref': '#/components/schemas/League'
        },
        standings: {
            '$ref': '#/components/schemas/Standings'
        }
    },
    type: 'object',
    required: ['new_entries', 'last_updated_data', 'league', 'standings'],
    title: 'LeagueData'
} as const;

export const $LeagueJoin = {
    properties: {
        join_code: {
            type: 'string',
            title: 'Join Code'
        }
    },
    type: 'object',
    required: ['join_code'],
    title: 'LeagueJoin'
} as const;

export const $LeagueOut = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        description: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Description'
        },
        external_id_fpl: {
            type: 'integer',
            title: 'External Id Fpl'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['name', 'external_id_fpl', 'id'],
    title: 'LeagueOut'
} as const;

export const $LeaguePrizeCreate = {
    properties: {
        total_prize: {
            type: 'number',
            title: 'Total Prize'
        },
        prize_type: {
            allOf: [
                {
                    '$ref': '#/components/schemas/PrizeType'
                }
            ],
            default: 'total_points'
        },
        prize_goal: {
            allOf: [
                {
                    '$ref': '#/components/schemas/GoalType'
                }
            ],
            default: 'points'
        },
        from_gw: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'From Gw'
        },
        to_gw: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'To Gw'
        },
        currency: {
            type: 'string',
            title: 'Currency',
            default: 'EUR'
        },
        distributions: {
            items: {
                '$ref': '#/components/schemas/PrizeDistributionCreate'
            },
            type: 'array',
            title: 'Distributions',
            default: [
                {
                    rank: 1,
                    distribution: 0.8
                },
                {
                    rank: 2,
                    distribution: 0.2
                }
            ]
        }
    },
    type: 'object',
    required: ['total_prize'],
    title: 'LeaguePrizeCreate'
} as const;

export const $LeaguePrizeOut = {
    properties: {
        total_prize: {
            type: 'number',
            title: 'Total Prize'
        },
        prize_type: {
            allOf: [
                {
                    '$ref': '#/components/schemas/PrizeType'
                }
            ],
            default: 'total_points'
        },
        prize_goal: {
            allOf: [
                {
                    '$ref': '#/components/schemas/GoalType'
                }
            ],
            default: 'points'
        },
        from_gw: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'From Gw'
        },
        to_gw: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'To Gw'
        },
        currency: {
            type: 'string',
            title: 'Currency',
            default: 'EUR'
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        },
        distributions: {
            items: {
                '$ref': '#/components/schemas/PrizeDistributionOut'
            },
            type: 'array',
            title: 'Distributions',
            default: []
        }
    },
    type: 'object',
    required: ['total_prize', 'id'],
    title: 'LeaguePrizeOut'
} as const;

export const $NewEntries = {
    properties: {
        has_next: {
            type: 'boolean',
            title: 'Has Next'
        },
        page: {
            type: 'integer',
            title: 'Page'
        },
        results: {
            items: {},
            type: 'array',
            title: 'Results'
        }
    },
    type: 'object',
    required: ['has_next', 'page', 'results'],
    title: 'NewEntries'
} as const;

export const $Pick = {
    properties: {
        element: {
            type: 'integer',
            title: 'Element'
        },
        position: {
            type: 'integer',
            title: 'Position'
        },
        multiplier: {
            type: 'integer',
            title: 'Multiplier'
        },
        is_captain: {
            type: 'boolean',
            title: 'Is Captain'
        },
        is_vice_captain: {
            type: 'boolean',
            title: 'Is Vice Captain'
        }
    },
    type: 'object',
    required: ['element', 'position', 'multiplier', 'is_captain', 'is_vice_captain'],
    title: 'Pick'
} as const;

export const $PrizeDistributionCreate = {
    properties: {
        rank: {
            type: 'integer',
            title: 'Rank',
            default: 1
        },
        percentage: {
            type: 'number',
            title: 'Percentage',
            default: 100
        }
    },
    type: 'object',
    title: 'PrizeDistributionCreate'
} as const;

export const $PrizeDistributionOut = {
    properties: {
        rank: {
            type: 'integer',
            title: 'Rank',
            default: 1
        },
        percentage: {
            type: 'number',
            title: 'Percentage',
            default: 100
        },
        id: {
            type: 'string',
            format: 'uuid',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['id'],
    title: 'PrizeDistributionOut'
} as const;

export const $PrizeType = {
    type: 'string',
    enum: ['total_points', 'gw_points', 'cup'],
    title: 'PrizeType'
} as const;

export const $Standing = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        event_total: {
            type: 'integer',
            title: 'Event Total'
        },
        player_name: {
            type: 'string',
            title: 'Player Name'
        },
        rank: {
            type: 'integer',
            title: 'Rank'
        },
        last_rank: {
            type: 'integer',
            title: 'Last Rank'
        },
        rank_sort: {
            type: 'integer',
            title: 'Rank Sort'
        },
        total: {
            type: 'integer',
            title: 'Total'
        },
        entry: {
            type: 'integer',
            title: 'Entry'
        },
        entry_name: {
            type: 'string',
            title: 'Entry Name'
        }
    },
    type: 'object',
    required: ['id', 'event_total', 'player_name', 'rank', 'last_rank', 'rank_sort', 'total', 'entry', 'entry_name'],
    title: 'Standing'
} as const;

export const $Standings = {
    properties: {
        has_next: {
            type: 'boolean',
            title: 'Has Next'
        },
        page: {
            type: 'integer',
            title: 'Page'
        },
        results: {
            items: {
                '$ref': '#/components/schemas/Standing'
            },
            type: 'array',
            title: 'Results'
        }
    },
    type: 'object',
    required: ['has_next', 'page', 'results'],
    title: 'Standings'
} as const;

export const $TeamData = {
    properties: {
        active_chip: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Active Chip'
        },
        automatic_subs: {
            items: {},
            type: 'array',
            title: 'Automatic Subs',
            default: []
        },
        entry_history: {
            '$ref': '#/components/schemas/EntryHistory'
        },
        picks: {
            items: {
                '$ref': '#/components/schemas/Pick'
            },
            type: 'array',
            title: 'Picks'
        }
    },
    type: 'object',
    required: ['entry_history', 'picks'],
    title: 'TeamData'
} as const;

export const $TopElementInfo = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        points: {
            type: 'integer',
            title: 'Points'
        }
    },
    type: 'object',
    required: ['id', 'points'],
    title: 'TopElementInfo'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;